{"ast":null,"code":"import _regeneratorRuntime from \"/home/rohit/BLOCKCHAIN/social-network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/rohit/BLOCKCHAIN/social-network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/rohit/BLOCKCHAIN/social-network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/rohit/BLOCKCHAIN/social-network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/rohit/BLOCKCHAIN/social-network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/rohit/BLOCKCHAIN/social-network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/rohit/BLOCKCHAIN/social-network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/rohit/BLOCKCHAIN/social-network/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport Navbar from './Navbar';\nimport SocialNetwork from '../abis/SocialNetwork.json';\nimport Identicon from 'identicon.js';\nimport Main from './Main';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockChainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockChainData\",\n    value: function () {\n      var _loadBlockChainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, networkData;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                console.log(accounts);\n                this.setState({\n                  account: accounts[0]\n                }); //fetch networkId\n\n                _context3.next = 8;\n                return web3.eth.net.getId();\n\n              case 8:\n                networkId = _context3.sent;\n                networkData = SocialNetwork.networks[networkId]; //console.log(networkId)\n                //fetch address\n\n                if (networkData) {\n                  listPost();\n                } else {\n                  window.alert('SocialNetwork contract is not deployed to detected network');\n                }\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockChainData() {\n        return _loadBlockChainData.apply(this, arguments);\n      }\n\n      return loadBlockChainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.createPost =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(content) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return _this.setState({\n                  loading: true\n                });\n\n              case 2:\n                console.log(_this.state.loading);\n\n                _this.state.socialNetwork.methods.createPost(content).send({\n                  from: _this.state.account\n                },\n                /*#__PURE__*/\n                function () {\n                  var _ref2 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee4(err, txh) {\n                    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                      while (1) {\n                        switch (_context4.prev = _context4.next) {\n                          case 0:\n                            if (!err) {\n                              _context4.next = 4;\n                              break;\n                            }\n\n                            console.log(err);\n                            _context4.next = 9;\n                            break;\n\n                          case 4:\n                            console.log(txh);\n                            _context4.next = 7;\n                            return _this.loadBlockChainData();\n\n                          case 7:\n                            _this.setState({\n                              loading: false\n                            });\n\n                            console.log(_this.state.loading);\n\n                          case 9:\n                          case \"end\":\n                            return _context4.stop();\n                        }\n                      }\n                    }, _callee4);\n                  }));\n\n                  return function (_x2, _x3) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }());\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      account: '',\n      socialNetwork: null,\n      postCount: 0,\n      posts: [],\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        account: this.state.account,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), this.state.loading ? React.createElement(\"div\", {\n        id: \"loader\",\n        className: \"text-center mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Loading...\")) : React.createElement(Main, {\n        posts: this.state.posts,\n        createPost: this.createPost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/rohit/BLOCKCHAIN/social-network/src/components/App.js"],"names":["React","Component","Web3","Navbar","SocialNetwork","Identicon","Main","App","loadWeb3","loadBlockChainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","console","log","setState","account","net","getId","networkId","networkData","networks","listPost","props","createPost","content","loading","state","socialNetwork","methods","send","from","err","txh","postCount","posts"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport Navbar from './Navbar';\nimport SocialNetwork from '../abis/SocialNetwork.json';\nimport Identicon from 'identicon.js';\nimport Main from './Main';\n\n\nclass App extends Component {\n\n    async componentWillMount(){\n        await this.loadWeb3()\n        await this.loadBlockChainData()\n    }\n\n    async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  async loadBlockChainData(){\n      const web3 = window.web3\n      const accounts = await web3.eth.getAccounts()\n      console.log(accounts)\n      this.setState({  account : accounts[0] })\n      //fetch networkId\n      const networkId = await web3.eth.net.getId()\n      const networkData = SocialNetwork.networks[networkId]\n      //console.log(networkId)\n      //fetch address\n      if(networkData)\n      {\n            listPost()\n      }\n      else {\n          window.alert('SocialNetwork contract is not deployed to detected network')\n      }\n  }\n\n  createPost = async (content) => {\n\n    await this.setState({ loading: true })\n    console.log(this.state.loading)\n     this.state.socialNetwork.methods.createPost(content).send({ from: this.state.account },\n     async (err,txh)=>{\n         if(err)\n         {\n             console.log(err)\n         }\n         else {\n             console.log(txh)\n             await this.loadBlockChainData()\n             this.setState({ loading: false })\n             console.log(this.state.loading)\n         }\n     } )\n\n\n }\n\n  constructor(props)\n  {\n      super(props)\n      this.state = {\n          account : '',\n          socialNetwork : null,\n          postCount : 0,\n          posts : [],\n          loading : true\n      }\n\n\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar account = {this.state.account}/>\n     {this.state.loading\n            ? <div id=\"loader\" className=\"text-center mt-5\"><p>Loading...</p></div>\n            :<Main\n            posts = {this.state.posts}\n            createPost={this.createPost}\n            />\n         }\n        </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}